@page "/generos/editar/{GeneroId:int}"
@inject NavigationManager navigationManager
@inject Irepositorio repositorio
@inject SweetAlertService swal

<h3>Editar Genero</h3>

@if (Genero is null)
{
    <p>Cargando ...</p>
}
else
{
    <FormularioGenero @ref="formularioGenero" Genero="Genero" OnValidSubmit="Editar" />
}

@code {

    [Parameter] public int GeneroId { get; set; }
    private FormularioGenero? formularioGenero;
    private Genero? Genero;

    protected override async Task OnInitializedAsync()
    {
        var respuestaHttp = await repositorio.Get<Genero>($"api/generos/{GeneroId}");

        if (respuestaHttp.error)
        {
            if (respuestaHttp.responseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("generos");
            }
            else
            {
                var mensajeError = await respuestaHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            Genero = respuestaHttp.response;
        }
    }

    private async Task Editar()
    {
        var respuestaHttp = await repositorio.Put("api/generos", Genero);

        if (respuestaHttp.error)
        {
            var mensajeError = await respuestaHttp.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            formularioGenero!.FormularioPosteadoConExito = true;
            navigationManager.NavigateTo("generos");
        }
    }
}
